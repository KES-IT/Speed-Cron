name: build-go-binary

on:
  release:
    types: [created] # 表示在创建新的 Release 时触发

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: git-cliff/cliff.toml
          args: -vv --latest --strip 'footer'
        env:
          OUTPUT: CHANGES.md
        # use release body in the same job

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}


  build-go-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows] # 需要打包的系统
        goarch: [amd64] # 需要打包的架构
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 一个默认的变量，用来实现往 Release 中添加文件
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.19 # 可以指定编译使用的 Golang 版本
          binary_name: "speed_cron" # 可以指定二进制文件的名称
          pre_command: export CGO_ENABLED=0 && export GODEBUG=http2client=0
          overwrite: true
          asset_name: "speed_cron_${{ matrix.goos }}_${{ matrix.goarch }}" # 可以指定二进制文件的名称
          compress_assets: OFF # 可以指定是否压缩二进制文件
          
